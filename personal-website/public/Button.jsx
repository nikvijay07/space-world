/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 Button.gltf 
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import TWEEN from '@tweenjs/tween.js'
import { useFrame } from '@react-three/fiber';



export default function Button(props) {
  const { nodes, materials } = useGLTF('/Button.gltf')

  const [buttonScale, setButtonScale] = useState([1, 1, 1.9]);
  const [buttonPressed, setButtonPressed] = useState(false);
  let buttonClicked = false;

  const toggleButtonPressed = () => {
    setButtonPressed(false)
  };

  useFrame((state) => {

    if (buttonPressed) {
      TWEEN.update();

      const newButtonScale = [1, 1, 1.2]
      const oldButtonScale = [1, 1, 1.9]

      new TWEEN.Tween(buttonScale)
      .to(newButtonScale, 5000)
      .easing(TWEEN.Easing.Quintic.Out)
      .onUpdate(() => {
        setButtonScale(newButtonScale)
      }).start().onComplete(() => {
        new TWEEN.Tween(buttonScale)
        .to(oldButtonScale, 2000)
        .easing(TWEEN.Easing.Quadratic.Out)
        .onUpdate(() => {
          setButtonScale(oldButtonScale)
        }).start().onComplete(() => {toggleButtonPressed()});
      });

    }

  });

  const onButtonClick = () => {

    if (!buttonClicked) {
      setButtonPressed(true)
      buttonClicked = true;
      console.log("HIII")
      // using Java Script method to get PDF file
        fetch("https://nikhil-vijayvergiya-resume-2024.s3.us-east-2.amazonaws.com/Nikhil+Resume.pdf").then((response) => {
          response.blob().then((blob) => {
          
              // Creating new object of PDF file
              const fileURL =
                  window.URL.createObjectURL(blob);
                  
              // Setting various property values
              let alink = document.createElement("a");
              alink.href = fileURL;
              alink.download = "NikhilVijayvergiya-Resume.pdf";
              alink.click();
          }).catch((error) => console.log(error));
      });
  }
};

  return (
    <group {...props} dispose={null} position={[-5, 3, 2]} rotation={[-Math.PI / 2, 0, Math.PI/0.8]}>
      <group onClick={onButtonClick} rotation={[Math.PI / 2, -Math.PI, 0]} scale={[0.02, 0.02, 0.02]} >
        <group scale={buttonScale} >
          <mesh geometry={nodes.Cylinder_1.geometry} material={materials['Cosmopolitan 1']} />
          <mesh geometry={nodes['3D_Text_-_R'].geometry} material={materials['Garden Glory']} position={[-20.914, -3.1, 23.781]} rotation={[-1.595, 0, 0]} scale={0.24} />
          <mesh geometry={nodes['3D_Text_-_e'].geometry} material={materials['Garden Glory']} position={[-14.241, -3.1, 23.781]} rotation={[-1.595, 0, 0]} scale={0.24} />
          <mesh geometry={nodes['3D_Text_-_e_1'].geometry} material={materials['Garden Glory']} position={[13.634, -3.1, 23.781]} rotation={[-1.595, 0, 0]} scale={0.24} />
          <mesh geometry={nodes['3D_Text_-_s'].geometry} material={materials['Garden Glory']} position={[-8.184, -3.1, 23.781]} rotation={[-1.595, 0, 0]} scale={0.24} />
          <mesh geometry={nodes['3D_Text_-_u'].geometry} material={materials['Garden Glory']} position={[-3.034, -3.1, 23.781]} rotation={[-1.595, 0, 0]} scale={0.24} />
          <mesh geometry={nodes['3D_Text_-_m'].geometry} material={materials['Garden Glory']} position={[3.592, -3.1, 23.781]} rotation={[-1.595, 0, 0]} scale={0.24} />
        </group>
        <mesh geometry={nodes.Cylinder.geometry} material={materials.Cosmopolitan} />
      </group>
    </group>
  )
}

useGLTF.preload('/Button.gltf')
